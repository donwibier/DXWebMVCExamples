@using DXWebNWind.Code.NWindEF
@model DXWebNWind.Models.HomeViewDetailModel
@{
	var grid = Html.DevExpress().GridView<Order_Details>(settings => {
		settings.Name = "GVDetail_" + Model.OrderID;
		//changed
		settings.CallbackRouteValues = new { Controller = "Home", Action = "GridViewDetailPartial",
			OrderID = Model.OrderID
		};

		settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Home", Action = "GridViewDetailPartialAddNew",
			OrderID = Model.OrderID
		};
		settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Home", Action = "GridViewDetailPartialUpdate",
			OrderID = Model.OrderID
		};
		settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Home", Action = "GridViewDetailPartialDelete",
			OrderID = Model.OrderID
		};
		settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
		settings.SettingsBehavior.ConfirmDelete = true;


		//changed
		settings.CommandColumn.Visible = false;
		settings.CommandColumn.ShowNewButton = true;
		settings.CommandColumn.ShowDeleteButton = true;
		settings.CommandColumn.ShowEditButton = true;

		settings.KeyFieldName = "OrderID;ProductID";
		//changed
		settings.EnableRowsCache = false;
		settings.SettingsPager.Visible = false;
		settings.Settings.ShowGroupPanel = false;
		settings.Settings.ShowFilterRow = false;
		settings.SettingsBehavior.AllowSelectByRowClick = true;

		settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCells;
		settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
		settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 2;
		settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = true;
		settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

		//changed
		settings.Columns.Add(c => {
			c.FieldName = "ProductID";
			c.EditorProperties().ComboBox(p =>
			{
				p.TextField = "Text";
				p.ValueField = "ID";
				p.DataSource = Model.Products;
			});
		});
		settings.Columns.Add("UnitPrice").PropertiesEdit.DisplayFormatString="c";
		settings.Columns.Add("Quantity");
		settings.Columns.Add("Discount");
		//added
		settings.Columns.Add(c => {
			c.FieldName = "Total";
			c.UnboundType = DevExpress.Data.UnboundColumnType.Decimal;
			c.PropertiesEdit.DisplayFormatString = "c";
			c.ReadOnly = true;
		});

		settings.CustomUnboundColumnData = (s, e) =>
		{
			if (e.Column.FieldName == "Total")
			{
				decimal price = (decimal)e.GetListSourceFieldValue("UnitPrice");
				short qty = (short)e.GetListSourceFieldValue("Quantity");
				e.Value = price * qty;
			}
		};
		settings.ClientSideEvents.BeginCallback = "OnDetailGridBeginCallback";
		
		settings.Settings.ShowFooter = true;
		settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "Total");
		settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "Quantity");

		settings.SettingsContextMenu.Enabled = true;
		settings.SettingsContextMenu.EnableColumnMenu = DefaultBoolean.False;

	});
	if (ViewData["EditError"] != null) {
		grid.SetEditErrorText((string)ViewData["EditError"]);
	}
}
@grid.Bind(Model.Details).GetHtml()